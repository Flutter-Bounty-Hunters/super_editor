name: Test project in a PR
on: [pull_request]
jobs:
  test_line_length:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./super_editor
    steps:
      - uses: actions/checkout@v2
      # Setup Flutter environment
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev"
      # Download all the packages that the app uses
      - run: flutter pub get
      # Enforce dart formating with line length of 120
      - run: dart format -o none -l 120 --set-exit-if-changed .

  test_mac:
    runs-on: macos-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v2
      # Setup Flutter environment
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev"
      # Download all the packages that the app uses
      - run: flutter pub get
      # TODO: run static analysis here when we get to zero analysis warnings
      # Run all tests
      - run: flutter test

  test_windows:
    runs-on: windows-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v2
      # Setup Flutter environment
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev"
      # Download all the packages that the app uses
      - run: flutter pub get
      # TODO: run static analysis here when we get to zero analysis warnings
      # Run all tests
      - run: flutter test

  test_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v2
      # Setup Flutter environment
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev"
      # Download all the packages that the app uses
      - run: flutter pub get
      # TODO: run static analysis here when we get to zero analysis warnings
      # Run all tests
      - run: flutter test
